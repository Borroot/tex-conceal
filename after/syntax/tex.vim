" Vim syntax file, better concealment for tex.
" Maintainer: Bram Pulles

if has('conceal') && &enc == 'utf-8'
	highlight clear Conceal

	" Misc.
	syn match texDelimiter  '\\{'        contained conceal cchar={
	syn match texDelimiter  '\\}'        contained conceal cchar=}

	syn match texStatement  '``'         contained conceal cchar=‚Äú
	syn match texStatement  '\'\''       contained conceal cchar=‚Äù
	syn match texStatement  '\\item\>'   contained conceal cchar=‚Ä¢

	" Conceal Left/Right combinations.
	let s:texMathDelimList = [
		\ ['|'            , '|'],
		\ ['\\|'          , '‚Äñ'],
		\ ['\\backslash'  , '\'],
		\ ['<'            , '<'],
		\ ['>'            , '>'],
		\ ['\\lceil'      , '‚åà'],
		\ ['\\rceil'      , '‚åâ'],
		\ ['\\lfloor'     , '‚åä'],
		\ ['\\rfloor'     , '‚åã'],
		\ ['\\lgroup'     , '‚åä'],
		\ ['\\rgroup'     , '‚åã'],
		\ ['\\lmoustache' , '‚éõ'],
		\ ['\\rmoustache' , '‚éû'],
		\ ['\\lbrace'     , '['],
		\ ['\\rbrace'     , ']'],
		\ ['\\downarrow'  , '‚Üì'],
		\ ['\\Downarrow'  , '‚áì'],
		\ ['\\uparrow'    , '‚Üë'],
		\ ['\\Uparrow'    , '‚Üë'],
		\ ['\\updownarrow', '‚Üï'],
		\ ['\\Updownarrow', '‚áï']]

	for texMathDelim in s:texMathDelimList
		execute "syn match texMathDelim '\\\\\\([bB]igg\\?\\|left\\|right\\)" . texMathDelim[0] . "' contained conceal cchar=" . texMathDelim[1]
	endfor

	" Extra math symbols or redefinitions.
	let s:texMathList = [
		\ ['oplus'         , '‚®≠'],
		\ ['mathcal{O}'    , 'êêÉ'],
		\ ['phi'           , 'Œ¶'],
		\ ['sqrt'          , '‚àö'],
		\ ['cdot'          , '¬∑'],
		\ ['approx'        , '‚âà'],
		\ ['equiv'         , '‚â°'],
		\ ['square'        , '‚óªÔ∏è'],
		\ ['lozenge'       , '‚óä'],
		\ [','             , ' '],
		\ [' '             , ' '],
		\ ['quad'          , ' '],
		\ ['langle'        , '‚ü®'],
		\ ['rangle'        , '‚ü©'],
		\ ['llbracket'     , '‚ü¶'],
		\ ['rrbracket'     , '‚üß'],
		\ ['lnot'          , '¬¨'],
		\ ['geqslant'      , '‚©æ'],
		\ ['leqslant'      , '‚©Ω'],
		\ ['vDash'         , '‚ä®'],
		\ ['models'        , '‚ä®'],
		\ ['setminus'      , '\'],
		\ ['where'         , '|'],
		\ ['mid'           , '|'],
		\ ['emptyset'      , '√ò'],
		\ ['iff'           , '‚Üî'],
		\ ['Leftrightarrow', '‚Üî']]

	for texMath in s:texMathList
		execute "syn match texMathSymbol '\\\\" . texMath[0] . "' contained conceal cchar=" . texMath[1]
	endfor

	" Sub scripts with numbers, letters and symbols mixed but smartly.
	let s:texSubScriptList = [
		\ [' '       , ' '],
		\ ['0'       , '‚ÇÄ'],
		\ ['1'       , '‚ÇÅ'],
		\ ['2'       , '‚ÇÇ'],
		\ ['3'       , '‚ÇÉ'],
		\ ['4'       , '‚ÇÑ'],
		\ ['5'       , '‚ÇÖ'],
		\ ['6'       , '‚ÇÜ'],
		\ ['7'       , '‚Çá'],
		\ ['8'       , '‚Çà'],
		\ ['9'       , '‚Çâ'],
		\ ['a'       , '‚Çê'],
		\ ['e'       , '‚Çë'],
		\ ['h'       , '‚Çï'],
		\ ['i'       , '·µ¢'],
		\ ['j'       , '‚±º'],
		\ ['k'       , '‚Çñ'],
		\ ['l'       , '‚Çó'],
		\ ['m'       , '‚Çò'],
		\ ['n'       , '‚Çô'],
		\ ['o'       , '‚Çí'],
		\ ['p'       , '‚Çö'],
		\ ['r'       , '·µ£'],
		\ ['s'       , '‚Çõ'],
		\ ['t'       , '‚Çú'],
		\ ['u'       , '·µ§'],
		\ ['v'       , '·µ•'],
		\ ['x'       , '‚Çì'],
		\ ['+'       , '‚Çä'],
		\ ['-'       , '‚Çã'],
		\ ['='       , '‚Çå'],
		\ ['('       , '‚Çç'],
		\ [')'       , '‚Çé'],
		\ ['\\phi'   , '·µ©'],
		\ ['\\chi'   , '·µ™'],
		\ ['\\beta'  , '·µ¶'],
		\ ['\\gamma' , '·µß'],
		\ ['\\rho'   , '·µ®']]

	for texSubScript in s:texSubScriptList
		execute "syn match texSubScriptBetter '" . texSubScript[0] . "' contained conceal cchar=" . texSubScript[1]
	endfor

	" Here we will make sure that the subscripts will only be concealed iff ALL
	" of the numbers/letters/symbols have a subscript equivalent.
	syn match texMathSymbol '_\(\([0-9]\|a\|e\|h\|i\|j\|k\|l\|m\|n\|o\|p\|r\|s\|t\|u\|v\|x\|+\|-\|=\|(\|)\|\\phi\|\\chi\|\\beta\|\\gamma\|\\rho\)\|{\([0-9]\|a\|e\|h\|i\|j\|k\|l\|m\|n\|o\|p\|r\|s\|t\|u\|v\|x\|+\|-\|=\|(\|)\|\\phi\|\\chi\|\\beta\|\\gamma\|\\rho\| \)\+}\)' contained conceal contains=texSubScriptBetter

	" Super scripts with numbers, letters and symbols mixed but smartly.
	let s:texSuperScriptList = [
		\ [' ', ' '],
		\ ['0', '‚Å∞'],
		\ ['1', '¬π'],
		\ ['2', '¬≤'],
		\ ['3', '¬≥'],
		\ ['4', '‚Å¥'],
		\ ['5', '‚Åµ'],
		\ ['6', '‚Å∂'],
		\ ['7', '‚Å∑'],
		\ ['8', '‚Å∏'],
		\ ['9', '‚Åπ'],
		\ ['a', '·µÉ'],
		\ ['b', '·µá'],
		\ ['c', '·∂ú'],
		\ ['d', '·µà'],
		\ ['e', '·µâ'],
		\ ['f', '·∂†'],
		\ ['g', '·µç'],
		\ ['h', ' ∞'],
		\ ['i', '‚Å±'],
		\ ['j', ' ≤'],
		\ ['k', '·µè'],
		\ ['l', 'À°'],
		\ ['m', '·µê'],
		\ ['n', '‚Åø'],
		\ ['o', '·µí'],
		\ ['p', '·µñ'],
		\ ['r', ' ≥'],
		\ ['s', 'À¢'],
		\ ['t', '·µó'],
		\ ['u', '·µò'],
		\ ['v', '·µõ'],
		\ ['w', ' ∑'],
		\ ['x', 'À£'],
		\ ['y', ' ∏'],
		\ ['z', '·∂ª'],
		\ ['A', '·¥¨'],
		\ ['B', '·¥Æ'],
		\ ['D', '·¥∞'],
		\ ['E', '·¥±'],
		\ ['G', '·¥≥'],
		\ ['H', '·¥¥'],
		\ ['I', '·¥µ'],
		\ ['J', '·¥∂'],
		\ ['K', '·¥∑'],
		\ ['L', '·¥∏'],
		\ ['M', '·¥π'],
		\ ['N', '·¥∫'],
		\ ['O', '·¥º'],
		\ ['P', '·¥æ'],
		\ ['R', '·¥ø'],
		\ ['T', '·µÄ'],
		\ ['U', '·µÅ'],
		\ ['W', '·µÇ'],
		\ ['+', '‚Å∫'],
		\ ['-', '‚Åª'],
		\ ['<', 'ÀÇ'],
		\ ['>', 'ÀÉ'],
		\ ['/', 'Àä'],
		\ ['(', '‚ÅΩ'],
		\ [')', '‚Åæ'],
		\ ['=', '‚Åº'],
		\ ['\.','Àô']]

	for texSuperScript in s:texSuperScriptList
		execute "syn match texSuperScriptBetter '" . texSuperScript[0] . "' contained conceal cchar=" . texSuperScript[1]
	endfor

	" Here we will make sure that the superscripts will only be concealed iff
	" ALL of the numbers/letters/symbols have a superscript equivalent.
	" Furthermore if there are multiple characters they either all have to be
	" numbers or no numbers at all since the superscript numbers have a
	" different height than the rest.
	syn match texMathSymbol '\^\(\([0-9]\|a\|b\|c\|d\|e\|f\|g\|h\|i\|j\|k\|l\|m\|n\|o\|p\|r\|s\|t\|u\|v\|w\|x\|y\|z\|A\|B\|D\|E\|G\|H\|I\|J\|K\|L\|M\|N\|O\|P\|R\|T\|U\|W\|+\|-\|<\|>\|/\|(\|)\|=\|\.\)\|{\(a\|b\|c\|d\|e\|f\|g\|h\|i\|j\|k\|l\|m\|n\|o\|p\|r\|s\|t\|u\|v\|w\|x\|y\|z\|A\|B\|D\|E\|G\|H\|I\|J\|K\|L\|M\|N\|O\|P\|R\|T\|U\|W\|+\|-\|<\|>\|/\|(\|)\|=\|\.\| \)\+}\|{[0-9]\+}\)' contained conceal contains=texSuperScriptBetter

	" All \mathbb characters.
	let s:texMathSymbolBbList = [
		\ [' ', ' '],
		\ ['A', 'ùî∏'],
		\ ['B', 'ùîπ'],
		\ ['C', '‚ÑÇ'],
		\ ['D', 'ùîª'],
		\ ['E', 'ùîº'],
		\ ['F', 'ùîΩ'],
		\ ['G', 'ùîæ'],
		\ ['H', '‚Ñç'],
		\ ['I', 'ùïÄ'],
		\ ['J', 'ùïÅ'],
		\ ['K', 'ùïÇ'],
		\ ['L', 'ùïÉ'],
		\ ['M', 'ùïÑ'],
		\ ['N', '‚Ñï'],
		\ ['O', 'ùïÜ'],
		\ ['P', '‚Ñô'],
		\ ['Q', '‚Ñö'],
		\ ['R', '‚Ñù'],
		\ ['S', 'ùïä'],
		\ ['T', 'ùïã'],
		\ ['U', 'ùïå'],
		\ ['V', 'ùïç'],
		\ ['W', 'ùïé'],
		\ ['X', 'ùïè'],
		\ ['Y', 'ùïê'],
		\ ['Z', '‚Ñ§']]

	for texMathSymbolBb in s:texMathSymbolBbList
		execute "syn match texMathSymbolBb '" . texMathSymbolBb[0] . "' contained conceal cchar=" . texMathSymbolBb[1]
	endfor
	syn match texMathSymbol '\\mathbb{\(\s\|[A-Z]\)\+}' contained conceal contains=texMathSymbolBb

	" Do spell checking inside of the correct tex text statements.
	if !exists("g:tex_nospell") || !g:tex_nospell
		syn region texMathText matchgroup=texStatement start='\\mathrm\s*{'                            end='}' concealends keepend contains=@texFoldGroup        containedin=texMathMatcher
		syn region texMathText matchgroup=texStatement start='\\\(\(inter\)\=text\|texttt\|mbox\)\s*{' end='}' concealends keepend contains=@texFoldGroup,@Spell containedin=texMathMatcher
	" Do not do any spell checking when it is turned of.
	else
		syn region texMathText matchgroup=texStatement start='\\\(\(inter\)\=text\|texttt\|mbox\|mathrm\)\s*{' end='}' concealends keepend contains=@texFoldGroup containedin=texMathMatcher
	endif

	" Recognise align, align* and cases as a math environment to enable concealment there.
	syn region texMathZoneA matchgroup=texStatement start='\\begin{align}'   matchgroup=texStatement end='\\end{align}'   keepend contains=@texMathZoneGroup
	syn region texMathZoneA matchgroup=texStatement start='\\begin{align\*}' matchgroup=texStatement end='\\end{align\*}' keepend contains=@texMathZoneGroup
	syn region texMathZoneA matchgroup=texStatement start='\\begin{cases}'   matchgroup=texStatement end='\\end{align\*}' keepend contains=@texMathZoneGroup

	" Add a syntax group for bold text in mathmode.
	syn cluster texMathZoneGroup add=texBoldMathText
	highlight texBoldMathText cterm=bold gui=bold

	" Hide \mathbf and \bm and make it bold. Text which is bold and italics.
	syn region texBoldMathText  matchgroup=texStatement start='\\\(mathbf\|bm\|textbf\){' end='}' concealends contains=@texMathZoneGroup containedin=texMathMatcher
	syn region texBoldItalStyle matchgroup=texTypeStyle start='\\\(emph\|texttt\){'       end='}' concealends contains=@texItalGroup

	" If this is not set then the unicode charaters break monospacing when text is concealed.
	set ambiwidth=single
endif
